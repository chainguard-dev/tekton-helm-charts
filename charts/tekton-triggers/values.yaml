configDefaultsTriggers:
  Example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"
configLoggingTriggers:
  loglevelController: info
  loglevelEventlistener: info
  loglevelWebhook: info
  zapLoggerConfig: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
configObservabilityTriggers:
  Example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
controller:
  ports:
  - name: http-metrics
    port: 9000
    protocol: TCP
    targetPort: 9000
  replicas: 1
  tektonTriggersController:
    image:
      repository: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.20.1@sha256
      tag: d55339c0970402a6049d7f629ae960451b86880099d2d28cc0bd148c755392e4
  type: ClusterIP
featureFlagsTriggers:
  enableApiFields: stable
  labelsExclusionPattern: ""
kubernetesClusterDomain: cluster.local
triggersInfo:
  version: v0.20.1
webhook:
  ports:
  - name: https-webhook
    port: 443
    targetPort: 8443
  replicas: 1
  type: ClusterIP
  webhook:
    image:
      repository: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.20.1@sha256
      tag: e343fc7394b971987b38bc0d3ec8001d1d5099b464e74e1de38b55ded4897efa
